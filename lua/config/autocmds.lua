-- vim.api.nvim_create_autocmd("BufWritePost", {
--   pattern = "*.md",
--   group = vim.api.nvim_create_augroup("MarkdownPDF", { clear = true }),
--   callback = function()
--     -- Verifica che il file esista e sia scrivibile
--     local input_file = vim.fn.expand("%:p")
--     if vim.fn.filereadable(input_file) ~= 1 then
--       vim.notify("File non trovato: " .. input_file, vim.log.levels.ERROR)
--       return
--     end
--
--     -- Genera path di output nella stessa directory
--     local output_file = vim.fn.expand("%:p:r") .. ".pdf"
--     local cmd =
--       string.format('pandoc "%s" -o "%s" --pdf-engine=xelatex -V mainfont="Helvetica"', input_file, output_file)
--
--     -- Esegue in background e gestisce gli errori
--     vim.fn.jobstart(cmd, {
--       on_exit = function(_, code)
--         if code == 0 then
--           vim.notify(string.format("PDF generato:\n%s", output_file), vim.log.levels.INFO)
--         else
--           vim.notify("Errore nella generazione PDF", vim.log.levels.ERROR)
--         end
--       end,
--       stderr_buffered = true,
--       on_stderr = function(_, data)
--         if data then
--           vim.notify(table.concat(data, "\n"), vim.log.levels.WARN)
--         end
--       end,
--     })
--   end,
-- })
